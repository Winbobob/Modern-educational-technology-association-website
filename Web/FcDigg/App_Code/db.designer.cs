#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace dbamet.Web.FcDigg.App_Code
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dig")]
	public partial class dbcms : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertshe(she instance);
    partial void Updateshe(she instance);
    partial void Deleteshe(she instance);
    partial void Insertcls(cls instance);
    partial void Updatecls(cls instance);
    partial void Deletecls(cls instance);
    partial void Insertlink(link instance);
    partial void Updatelink(link instance);
    partial void Deletelink(link instance);
    partial void Inserttag(tag instance);
    partial void Updatetag(tag instance);
    partial void Deletetag(tag instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertnews(news instance);
    partial void Updatenews(news instance);
    partial void Deletenews(news instance);
    partial void Insertping(ping instance);
    partial void Updateping(ping instance);
    partial void Deleteping(ping instance);
    partial void Insertfavorite(favorite instance);
    partial void Updatefavorite(favorite instance);
    partial void Deletefavorite(favorite instance);
    partial void Insertdings(dings instance);
    partial void Updatedings(dings instance);
    partial void Deletedings(dings instance);
    partial void Insertfriend(friend instance);
    partial void Updatefriend(friend instance);
    partial void Deletefriend(friend instance);
    partial void Insertuser1(user1 instance);
    partial void Updateuser1(user1 instance);
    partial void Deleteuser1(user1 instance);
    partial void Insertt_info(t_info instance);
    partial void Updatet_info(t_info instance);
    partial void Deletet_info(t_info instance);
    partial void Insertf_info(f_info instance);
    partial void Updatef_info(f_info instance);
    partial void Deletef_info(f_info instance);
    #endregion
		
		public dbcms() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["digConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbcms(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbcms(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbcms(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbcms(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<she> she
		{
			get
			{
				return this.GetTable<she>();
			}
		}
		
		public System.Data.Linq.Table<cls> cls
		{
			get
			{
				return this.GetTable<cls>();
			}
		}
		
		public System.Data.Linq.Table<link> link
		{
			get
			{
				return this.GetTable<link>();
			}
		}
		
		public System.Data.Linq.Table<tag> tag
		{
			get
			{
				return this.GetTable<tag>();
			}
		}
		
		public System.Data.Linq.Table<user> user
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<news> news
		{
			get
			{
				return this.GetTable<news>();
			}
		}
		
		public System.Data.Linq.Table<ping> ping
		{
			get
			{
				return this.GetTable<ping>();
			}
		}
		
		public System.Data.Linq.Table<favorite> favorite
		{
			get
			{
				return this.GetTable<favorite>();
			}
		}
		
		public System.Data.Linq.Table<dings> dings
		{
			get
			{
				return this.GetTable<dings>();
			}
		}
		
		public System.Data.Linq.Table<friend> friend
		{
			get
			{
				return this.GetTable<friend>();
			}
		}
		
		public System.Data.Linq.Table<user1> user1
		{
			get
			{
				return this.GetTable<user1>();
			}
		}
		
		public System.Data.Linq.Table<t_info> t_info
		{
			get
			{
				return this.GetTable<t_info>();
			}
		}
		
		public System.Data.Linq.Table<f_info> f_info
		{
			get
			{
				return this.GetTable<f_info>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.she")]
	public partial class she : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _url;
		
		private string _jscode;
		
		private string _icp;
		
		private System.Nullable<bool> _state;
		
		private string _state_demo;
		
		private string _title;
		
		private string _Keywords;
		
		private string _Description;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnjscodeChanging(string value);
    partial void OnjscodeChanged();
    partial void OnicpChanging(string value);
    partial void OnicpChanged();
    partial void OnstateChanging(System.Nullable<bool> value);
    partial void OnstateChanged();
    partial void Onstate_demoChanging(string value);
    partial void Onstate_demoChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public she()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jscode", DbType="NVarChar(100)")]
		public string jscode
		{
			get
			{
				return this._jscode;
			}
			set
			{
				if ((this._jscode != value))
				{
					this.OnjscodeChanging(value);
					this.SendPropertyChanging();
					this._jscode = value;
					this.SendPropertyChanged("jscode");
					this.OnjscodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_icp", DbType="NVarChar(50)")]
		public string icp
		{
			get
			{
				return this._icp;
			}
			set
			{
				if ((this._icp != value))
				{
					this.OnicpChanging(value);
					this.SendPropertyChanging();
					this._icp = value;
					this.SendPropertyChanged("icp");
					this.OnicpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Bit")]
		public System.Nullable<bool> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_demo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string state_demo
		{
			get
			{
				return this._state_demo;
			}
			set
			{
				if ((this._state_demo != value))
				{
					this.Onstate_demoChanging(value);
					this.SendPropertyChanging();
					this._state_demo = value;
					this.SendPropertyChanged("state_demo");
					this.Onstate_demoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(255)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(255)")]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cls")]
	public partial class cls : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _jb;
		
		private string _keywords;
		
		private string _description;
		
		private bool _display;
		
		private System.Nullable<int> _sort;
		
		private EntitySet<news> _news;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnjbChanging(string value);
    partial void OnjbChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndisplayChanging(bool value);
    partial void OndisplayChanged();
    partial void OnsortChanging(System.Nullable<int> value);
    partial void OnsortChanged();
    #endregion
		
		public cls()
		{
			this._news = new EntitySet<news>(new Action<news>(this.attach_news), new Action<news>(this.detach_news));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jb", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string jb
		{
			get
			{
				return this._jb;
			}
			set
			{
				if ((this._jb != value))
				{
					this.OnjbChanging(value);
					this.SendPropertyChanging();
					this._jb = value;
					this.SendPropertyChanged("jb");
					this.OnjbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywords", DbType="NVarChar(255)")]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display", DbType="Bit NOT NULL")]
		public bool display
		{
			get
			{
				return this._display;
			}
			set
			{
				if ((this._display != value))
				{
					this.OndisplayChanging(value);
					this.SendPropertyChanging();
					this._display = value;
					this.SendPropertyChanged("display");
					this.OndisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="Int")]
		public System.Nullable<int> sort
		{
			get
			{
				return this._sort;
			}
			set
			{
				if ((this._sort != value))
				{
					this.OnsortChanging(value);
					this.SendPropertyChanging();
					this._sort = value;
					this.SendPropertyChanged("sort");
					this.OnsortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cls_news", Storage="_news", ThisKey="id", OtherKey="cid")]
		public EntitySet<news> news
		{
			get
			{
				return this._news;
			}
			set
			{
				this._news.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_news(news entity)
		{
			this.SendPropertyChanging();
			entity.cls = this;
		}
		
		private void detach_news(news entity)
		{
			this.SendPropertyChanging();
			entity.cls = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.link")]
	public partial class link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _display;
		
		private bool _state;
		
		private string _url;
		
		private string _logo;
		
		private string _demo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndisplayChanging(int value);
    partial void OndisplayChanged();
    partial void OnstateChanging(bool value);
    partial void OnstateChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnlogoChanging(string value);
    partial void OnlogoChanged();
    partial void OndemoChanging(string value);
    partial void OndemoChanged();
    #endregion
		
		public link()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_display", DbType="Int NOT NULL")]
		public int display
		{
			get
			{
				return this._display;
			}
			set
			{
				if ((this._display != value))
				{
					this.OndisplayChanging(value);
					this.SendPropertyChanging();
					this._display = value;
					this.SendPropertyChanged("display");
					this.OndisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Bit NOT NULL")]
		public bool state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logo", DbType="NVarChar(50)")]
		public string logo
		{
			get
			{
				return this._logo;
			}
			set
			{
				if ((this._logo != value))
				{
					this.OnlogoChanging(value);
					this.SendPropertyChanging();
					this._logo = value;
					this.SendPropertyChanged("logo");
					this.OnlogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_demo", DbType="NVarChar(50)")]
		public string demo
		{
			get
			{
				return this._demo;
			}
			set
			{
				if ((this._demo != value))
				{
					this.OndemoChanging(value);
					this.SendPropertyChanging();
					this._demo = value;
					this.SendPropertyChanged("demo");
					this.OndemoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tag")]
	public partial class tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _hits;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnhitsChanging(System.Nullable<int> value);
    partial void OnhitsChanged();
    #endregion
		
		public tag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hits", DbType="Int")]
		public System.Nullable<int> hits
		{
			get
			{
				return this._hits;
			}
			set
			{
				if ((this._hits != value))
				{
					this.OnhitsChanging(value);
					this.SendPropertyChanging();
					this._hits = value;
					this.SendPropertyChanged("hits");
					this.OnhitsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _pwd;
		
		private string _email;
		
		private int _jb;
		
		private string _photo;
		
		private EntitySet<news> _news;
		
		private EntitySet<ping> _ping;
		
		private EntitySet<favorite> _favorite;
		
		private EntitySet<dings> _dings;
		
		private EntitySet<friend> _friend;
		
		private EntitySet<user1> _user1;
		
		private EntitySet<t_info> _t_info;
		
		private EntitySet<f_info> _f_info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnjbChanging(int value);
    partial void OnjbChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    #endregion
		
		public user()
		{
			this._news = new EntitySet<news>(new Action<news>(this.attach_news), new Action<news>(this.detach_news));
			this._ping = new EntitySet<ping>(new Action<ping>(this.attach_ping), new Action<ping>(this.detach_ping));
			this._favorite = new EntitySet<favorite>(new Action<favorite>(this.attach_favorite), new Action<favorite>(this.detach_favorite));
			this._dings = new EntitySet<dings>(new Action<dings>(this.attach_dings), new Action<dings>(this.detach_dings));
			this._friend = new EntitySet<friend>(new Action<friend>(this.attach_friend), new Action<friend>(this.detach_friend));
			this._user1 = new EntitySet<user1>(new Action<user1>(this.attach_user1), new Action<user1>(this.detach_user1));
			this._t_info = new EntitySet<t_info>(new Action<t_info>(this.attach_t_info), new Action<t_info>(this.detach_t_info));
			this._f_info = new EntitySet<f_info>(new Action<f_info>(this.attach_f_info), new Action<f_info>(this.detach_f_info));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string pwd
		{
			get
			{
				return this._pwd;
			}
			set
			{
				if ((this._pwd != value))
				{
					this.OnpwdChanging(value);
					this.SendPropertyChanging();
					this._pwd = value;
					this.SendPropertyChanged("pwd");
					this.OnpwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jb", DbType="Int NOT NULL")]
		public int jb
		{
			get
			{
				return this._jb;
			}
			set
			{
				if ((this._jb != value))
				{
					this.OnjbChanging(value);
					this.SendPropertyChanging();
					this._jb = value;
					this.SendPropertyChanged("jb");
					this.OnjbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="NVarChar(50)")]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_news", Storage="_news", ThisKey="id", OtherKey="uid")]
		public EntitySet<news> news
		{
			get
			{
				return this._news;
			}
			set
			{
				this._news.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_ping", Storage="_ping", ThisKey="id", OtherKey="uid")]
		public EntitySet<ping> ping
		{
			get
			{
				return this._ping;
			}
			set
			{
				this._ping.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_favorite", Storage="_favorite", ThisKey="id", OtherKey="uid")]
		public EntitySet<favorite> favorite
		{
			get
			{
				return this._favorite;
			}
			set
			{
				this._favorite.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_dings", Storage="_dings", ThisKey="id", OtherKey="uid")]
		public EntitySet<dings> dings
		{
			get
			{
				return this._dings;
			}
			set
			{
				this._dings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_friend", Storage="_friend", ThisKey="id", OtherKey="fid")]
		public EntitySet<friend> friend
		{
			get
			{
				return this._friend;
			}
			set
			{
				this._friend.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user1", Storage="_user1", ThisKey="id", OtherKey="uid")]
		public EntitySet<user1> user1
		{
			get
			{
				return this._user1;
			}
			set
			{
				this._user1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_t_info", Storage="_t_info", ThisKey="id", OtherKey="f_uid")]
		public EntitySet<t_info> t_info
		{
			get
			{
				return this._t_info;
			}
			set
			{
				this._t_info.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_f_info", Storage="_f_info", ThisKey="id", OtherKey="t_uid")]
		public EntitySet<f_info> f_info
		{
			get
			{
				return this._f_info;
			}
			set
			{
				this._f_info.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_news(news entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_news(news entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_ping(ping entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_ping(ping entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_favorite(favorite entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_favorite(favorite entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_dings(dings entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_dings(dings entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_friend(friend entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_friend(friend entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_user1(user1 entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_user1(user1 entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_t_info(t_info entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_t_info(t_info entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_f_info(f_info entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_f_info(f_info entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.news")]
	public partial class news : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _author;
		
		private string _cont;
		
		private string _laiy;
		
		private System.DateTime _ndate;
		
		private string _tags;
		
		private int _ping;
		
		private int _cid;
		
		private int _hit;
		
		private string _pic;
		
		private System.Nullable<int> _ding;
		
		private System.Nullable<int> _uid;
		
		private EntitySet<ping> _ping1;
		
		private EntitySet<favorite> _favorite;
		
		private EntitySet<dings> _dings;
		
		private EntityRef<user> _user;
		
		private EntityRef<cls> _cls;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OncontChanging(string value);
    partial void OncontChanged();
    partial void OnlaiyChanging(string value);
    partial void OnlaiyChanged();
    partial void OnndateChanging(System.DateTime value);
    partial void OnndateChanged();
    partial void OntagsChanging(string value);
    partial void OntagsChanged();
    partial void OnpingChanging(int value);
    partial void OnpingChanged();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OnhitChanging(int value);
    partial void OnhitChanged();
    partial void OnpicChanging(string value);
    partial void OnpicChanged();
    partial void OndingChanging(System.Nullable<int> value);
    partial void OndingChanged();
    partial void OnuidChanging(System.Nullable<int> value);
    partial void OnuidChanged();
    #endregion
		
		public news()
		{
			this._ping1 = new EntitySet<ping>(new Action<ping>(this.attach_ping1), new Action<ping>(this.detach_ping1));
			this._favorite = new EntitySet<favorite>(new Action<favorite>(this.attach_favorite), new Action<favorite>(this.detach_favorite));
			this._dings = new EntitySet<dings>(new Action<dings>(this.attach_dings), new Action<dings>(this.detach_dings));
			this._user = default(EntityRef<user>);
			this._cls = default(EntityRef<cls>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="NVarChar(50)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cont", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string cont
		{
			get
			{
				return this._cont;
			}
			set
			{
				if ((this._cont != value))
				{
					this.OncontChanging(value);
					this.SendPropertyChanging();
					this._cont = value;
					this.SendPropertyChanged("cont");
					this.OncontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_laiy", DbType="NVarChar(50)")]
		public string laiy
		{
			get
			{
				return this._laiy;
			}
			set
			{
				if ((this._laiy != value))
				{
					this.OnlaiyChanging(value);
					this.SendPropertyChanging();
					this._laiy = value;
					this.SendPropertyChanged("laiy");
					this.OnlaiyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ndate", DbType="DateTime NOT NULL")]
		public System.DateTime ndate
		{
			get
			{
				return this._ndate;
			}
			set
			{
				if ((this._ndate != value))
				{
					this.OnndateChanging(value);
					this.SendPropertyChanging();
					this._ndate = value;
					this.SendPropertyChanged("ndate");
					this.OnndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tags", DbType="NVarChar(50)")]
		public string tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				if ((this._tags != value))
				{
					this.OntagsChanging(value);
					this.SendPropertyChanging();
					this._tags = value;
					this.SendPropertyChanged("tags");
					this.OntagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ping", DbType="Int NOT NULL")]
		public int ping
		{
			get
			{
				return this._ping;
			}
			set
			{
				if ((this._ping != value))
				{
					this.OnpingChanging(value);
					this.SendPropertyChanging();
					this._ping = value;
					this.SendPropertyChanged("ping");
					this.OnpingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", DbType="Int NOT NULL")]
		public int cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					if (this._cls.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hit", DbType="Int NOT NULL")]
		public int hit
		{
			get
			{
				return this._hit;
			}
			set
			{
				if ((this._hit != value))
				{
					this.OnhitChanging(value);
					this.SendPropertyChanging();
					this._hit = value;
					this.SendPropertyChanged("hit");
					this.OnhitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic", DbType="NVarChar(50)")]
		public string pic
		{
			get
			{
				return this._pic;
			}
			set
			{
				if ((this._pic != value))
				{
					this.OnpicChanging(value);
					this.SendPropertyChanging();
					this._pic = value;
					this.SendPropertyChanged("pic");
					this.OnpicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ding", DbType="Int")]
		public System.Nullable<int> ding
		{
			get
			{
				return this._ding;
			}
			set
			{
				if ((this._ding != value))
				{
					this.OndingChanging(value);
					this.SendPropertyChanging();
					this._ding = value;
					this.SendPropertyChanged("ding");
					this.OndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int")]
		public System.Nullable<int> uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="news_ping", Storage="_ping1", ThisKey="id", OtherKey="nid")]
		public EntitySet<ping> ping1
		{
			get
			{
				return this._ping1;
			}
			set
			{
				this._ping1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="news_favorite", Storage="_favorite", ThisKey="id", OtherKey="nid")]
		public EntitySet<favorite> favorite
		{
			get
			{
				return this._favorite;
			}
			set
			{
				this._favorite.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="news_dings", Storage="_dings", ThisKey="id", OtherKey="nid")]
		public EntitySet<dings> dings
		{
			get
			{
				return this._dings;
			}
			set
			{
				this._dings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_news", Storage="_user", ThisKey="uid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.news.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.news.Add(this);
						this._uid = value.id;
					}
					else
					{
						this._uid = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cls_news", Storage="_cls", ThisKey="cid", OtherKey="id", IsForeignKey=true)]
		public cls cls
		{
			get
			{
				return this._cls.Entity;
			}
			set
			{
				cls previousValue = this._cls.Entity;
				if (((previousValue != value) 
							|| (this._cls.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cls.Entity = null;
						previousValue.news.Remove(this);
					}
					this._cls.Entity = value;
					if ((value != null))
					{
						value.news.Add(this);
						this._cid = value.id;
					}
					else
					{
						this._cid = default(int);
					}
					this.SendPropertyChanged("cls");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ping1(ping entity)
		{
			this.SendPropertyChanging();
			entity.news = this;
		}
		
		private void detach_ping1(ping entity)
		{
			this.SendPropertyChanging();
			entity.news = null;
		}
		
		private void attach_favorite(favorite entity)
		{
			this.SendPropertyChanging();
			entity.news = this;
		}
		
		private void detach_favorite(favorite entity)
		{
			this.SendPropertyChanging();
			entity.news = null;
		}
		
		private void attach_dings(dings entity)
		{
			this.SendPropertyChanging();
			entity.news = this;
		}
		
		private void detach_dings(dings entity)
		{
			this.SendPropertyChanging();
			entity.news = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ping")]
	public partial class ping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _nid;
		
		private string _cont;
		
		private System.Nullable<int> _uid;
		
		private System.Nullable<System.DateTime> _pdate;
		
		private string _ip;
		
		private EntityRef<news> _news;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnidChanging(int value);
    partial void OnnidChanged();
    partial void OncontChanging(string value);
    partial void OncontChanged();
    partial void OnuidChanging(System.Nullable<int> value);
    partial void OnuidChanged();
    partial void OnpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnpdateChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    #endregion
		
		public ping()
		{
			this._news = default(EntityRef<news>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nid", DbType="Int NOT NULL")]
		public int nid
		{
			get
			{
				return this._nid;
			}
			set
			{
				if ((this._nid != value))
				{
					if (this._news.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnidChanging(value);
					this.SendPropertyChanging();
					this._nid = value;
					this.SendPropertyChanged("nid");
					this.OnnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cont", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cont
		{
			get
			{
				return this._cont;
			}
			set
			{
				if ((this._cont != value))
				{
					this.OncontChanging(value);
					this.SendPropertyChanging();
					this._cont = value;
					this.SendPropertyChanged("cont");
					this.OncontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int")]
		public System.Nullable<int> uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> pdate
		{
			get
			{
				return this._pdate;
			}
			set
			{
				if ((this._pdate != value))
				{
					this.OnpdateChanging(value);
					this.SendPropertyChanging();
					this._pdate = value;
					this.SendPropertyChanged("pdate");
					this.OnpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="NVarChar(50)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="news_ping", Storage="_news", ThisKey="nid", OtherKey="id", IsForeignKey=true)]
		public news news
		{
			get
			{
				return this._news.Entity;
			}
			set
			{
				news previousValue = this._news.Entity;
				if (((previousValue != value) 
							|| (this._news.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._news.Entity = null;
						previousValue.ping1.Remove(this);
					}
					this._news.Entity = value;
					if ((value != null))
					{
						value.ping1.Add(this);
						this._nid = value.id;
					}
					else
					{
						this._nid = default(int);
					}
					this.SendPropertyChanged("news");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_ping", Storage="_user", ThisKey="uid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.ping.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.ping.Add(this);
						this._uid = value.id;
					}
					else
					{
						this._uid = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.favorite")]
	public partial class favorite : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _nid;
		
		private int _uid;
		
		private EntityRef<news> _news;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnidChanging(int value);
    partial void OnnidChanged();
    partial void OnuidChanging(int value);
    partial void OnuidChanged();
    #endregion
		
		public favorite()
		{
			this._news = default(EntityRef<news>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nid", DbType="Int NOT NULL")]
		public int nid
		{
			get
			{
				return this._nid;
			}
			set
			{
				if ((this._nid != value))
				{
					if (this._news.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnidChanging(value);
					this.SendPropertyChanging();
					this._nid = value;
					this.SendPropertyChanged("nid");
					this.OnnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int NOT NULL")]
		public int uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="news_favorite", Storage="_news", ThisKey="nid", OtherKey="id", IsForeignKey=true)]
		public news news
		{
			get
			{
				return this._news.Entity;
			}
			set
			{
				news previousValue = this._news.Entity;
				if (((previousValue != value) 
							|| (this._news.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._news.Entity = null;
						previousValue.favorite.Remove(this);
					}
					this._news.Entity = value;
					if ((value != null))
					{
						value.favorite.Add(this);
						this._nid = value.id;
					}
					else
					{
						this._nid = default(int);
					}
					this.SendPropertyChanged("news");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_favorite", Storage="_user", ThisKey="uid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.favorite.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.favorite.Add(this);
						this._uid = value.id;
					}
					else
					{
						this._uid = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dings")]
	public partial class dings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _nid;
		
		private int _uid;
		
		private EntityRef<news> _news;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnidChanging(int value);
    partial void OnnidChanged();
    partial void OnuidChanging(int value);
    partial void OnuidChanged();
    #endregion
		
		public dings()
		{
			this._news = default(EntityRef<news>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nid", DbType="Int NOT NULL")]
		public int nid
		{
			get
			{
				return this._nid;
			}
			set
			{
				if ((this._nid != value))
				{
					if (this._news.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnidChanging(value);
					this.SendPropertyChanging();
					this._nid = value;
					this.SendPropertyChanged("nid");
					this.OnnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int NOT NULL")]
		public int uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="news_dings", Storage="_news", ThisKey="nid", OtherKey="id", IsForeignKey=true)]
		public news news
		{
			get
			{
				return this._news.Entity;
			}
			set
			{
				news previousValue = this._news.Entity;
				if (((previousValue != value) 
							|| (this._news.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._news.Entity = null;
						previousValue.dings.Remove(this);
					}
					this._news.Entity = value;
					if ((value != null))
					{
						value.dings.Add(this);
						this._nid = value.id;
					}
					else
					{
						this._nid = default(int);
					}
					this.SendPropertyChanged("news");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_dings", Storage="_user", ThisKey="uid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.dings.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.dings.Add(this);
						this._uid = value.id;
					}
					else
					{
						this._uid = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.friend")]
	public partial class friend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _uid;
		
		private int _fid;
		
		private bool _state;
		
		private string _demo;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuidChanging(int value);
    partial void OnuidChanged();
    partial void OnfidChanging(int value);
    partial void OnfidChanged();
    partial void OnstateChanging(bool value);
    partial void OnstateChanged();
    partial void OndemoChanging(string value);
    partial void OndemoChanged();
    #endregion
		
		public friend()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int NOT NULL")]
		public int uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fid", DbType="Int NOT NULL")]
		public int fid
		{
			get
			{
				return this._fid;
			}
			set
			{
				if ((this._fid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfidChanging(value);
					this.SendPropertyChanging();
					this._fid = value;
					this.SendPropertyChanged("fid");
					this.OnfidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Bit NOT NULL")]
		public bool state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_demo", DbType="NVarChar(100)")]
		public string demo
		{
			get
			{
				return this._demo;
			}
			set
			{
				if ((this._demo != value))
				{
					this.OndemoChanging(value);
					this.SendPropertyChanging();
					this._demo = value;
					this.SendPropertyChanged("demo");
					this.OndemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_friend", Storage="_user", ThisKey="fid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.friend.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.friend.Add(this);
						this._fid = value.id;
					}
					else
					{
						this._fid = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user1")]
	public partial class user1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _uid;
		
		private System.Nullable<int> _sex;
		
		private string _url;
		
		private string _address;
		
		private string _qq;
		
		private string _msn;
		
		private string _qianm;
		
		private System.Nullable<System.DateTime> _shengri;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuidChanging(int value);
    partial void OnuidChanged();
    partial void OnsexChanging(System.Nullable<int> value);
    partial void OnsexChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnqqChanging(string value);
    partial void OnqqChanged();
    partial void OnmsnChanging(string value);
    partial void OnmsnChanged();
    partial void OnqianmChanging(string value);
    partial void OnqianmChanged();
    partial void OnshengriChanging(System.Nullable<System.DateTime> value);
    partial void OnshengriChanged();
    #endregion
		
		public user1()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="Int")]
		public System.Nullable<int> sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(50)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qq", DbType="NVarChar(50)")]
		public string qq
		{
			get
			{
				return this._qq;
			}
			set
			{
				if ((this._qq != value))
				{
					this.OnqqChanging(value);
					this.SendPropertyChanging();
					this._qq = value;
					this.SendPropertyChanged("qq");
					this.OnqqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msn", DbType="NVarChar(50)")]
		public string msn
		{
			get
			{
				return this._msn;
			}
			set
			{
				if ((this._msn != value))
				{
					this.OnmsnChanging(value);
					this.SendPropertyChanging();
					this._msn = value;
					this.SendPropertyChanged("msn");
					this.OnmsnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qianm", DbType="NVarChar(255)")]
		public string qianm
		{
			get
			{
				return this._qianm;
			}
			set
			{
				if ((this._qianm != value))
				{
					this.OnqianmChanging(value);
					this.SendPropertyChanging();
					this._qianm = value;
					this.SendPropertyChanged("qianm");
					this.OnqianmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shengri", DbType="DateTime")]
		public System.Nullable<System.DateTime> shengri
		{
			get
			{
				return this._shengri;
			}
			set
			{
				if ((this._shengri != value))
				{
					this.OnshengriChanging(value);
					this.SendPropertyChanging();
					this._shengri = value;
					this.SendPropertyChanged("shengri");
					this.OnshengriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_user1", Storage="_user", ThisKey="uid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.user1.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.user1.Add(this);
						this._uid = value.id;
					}
					else
					{
						this._uid = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_info")]
	public partial class t_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _cont;
		
		private int _f_uid;
		
		private int _t_uid;
		
		private System.DateTime _ndate;
		
		private bool _state;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontChanging(string value);
    partial void OncontChanged();
    partial void Onf_uidChanging(int value);
    partial void Onf_uidChanged();
    partial void Ont_uidChanging(int value);
    partial void Ont_uidChanged();
    partial void OnndateChanging(System.DateTime value);
    partial void OnndateChanged();
    partial void OnstateChanging(bool value);
    partial void OnstateChanged();
    #endregion
		
		public t_info()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cont", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cont
		{
			get
			{
				return this._cont;
			}
			set
			{
				if ((this._cont != value))
				{
					this.OncontChanging(value);
					this.SendPropertyChanging();
					this._cont = value;
					this.SendPropertyChanged("cont");
					this.OncontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_uid", DbType="Int NOT NULL")]
		public int f_uid
		{
			get
			{
				return this._f_uid;
			}
			set
			{
				if ((this._f_uid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onf_uidChanging(value);
					this.SendPropertyChanging();
					this._f_uid = value;
					this.SendPropertyChanged("f_uid");
					this.Onf_uidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_uid", DbType="Int NOT NULL")]
		public int t_uid
		{
			get
			{
				return this._t_uid;
			}
			set
			{
				if ((this._t_uid != value))
				{
					this.Ont_uidChanging(value);
					this.SendPropertyChanging();
					this._t_uid = value;
					this.SendPropertyChanged("t_uid");
					this.Ont_uidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ndate", DbType="DateTime NOT NULL")]
		public System.DateTime ndate
		{
			get
			{
				return this._ndate;
			}
			set
			{
				if ((this._ndate != value))
				{
					this.OnndateChanging(value);
					this.SendPropertyChanging();
					this._ndate = value;
					this.SendPropertyChanged("ndate");
					this.OnndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Bit NOT NULL")]
		public bool state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_t_info", Storage="_user", ThisKey="f_uid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.t_info.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.t_info.Add(this);
						this._f_uid = value.id;
					}
					else
					{
						this._f_uid = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.f_info")]
	public partial class f_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _title;
		
		private string _cont;
		
		private int _f_uid;
		
		private int _t_uid;
		
		private System.DateTime _ndate;
		
		private EntityRef<user> _user;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontChanging(string value);
    partial void OncontChanged();
    partial void Onf_uidChanging(int value);
    partial void Onf_uidChanged();
    partial void Ont_uidChanging(int value);
    partial void Ont_uidChanged();
    partial void OnndateChanging(System.DateTime value);
    partial void OnndateChanged();
    #endregion
		
		public f_info()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cont", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string cont
		{
			get
			{
				return this._cont;
			}
			set
			{
				if ((this._cont != value))
				{
					this.OncontChanging(value);
					this.SendPropertyChanging();
					this._cont = value;
					this.SendPropertyChanged("cont");
					this.OncontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_uid", DbType="Int NOT NULL")]
		public int f_uid
		{
			get
			{
				return this._f_uid;
			}
			set
			{
				if ((this._f_uid != value))
				{
					this.Onf_uidChanging(value);
					this.SendPropertyChanging();
					this._f_uid = value;
					this.SendPropertyChanged("f_uid");
					this.Onf_uidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_uid", DbType="Int NOT NULL")]
		public int t_uid
		{
			get
			{
				return this._t_uid;
			}
			set
			{
				if ((this._t_uid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ont_uidChanging(value);
					this.SendPropertyChanging();
					this._t_uid = value;
					this.SendPropertyChanged("t_uid");
					this.Ont_uidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ndate", DbType="DateTime NOT NULL")]
		public System.DateTime ndate
		{
			get
			{
				return this._ndate;
			}
			set
			{
				if ((this._ndate != value))
				{
					this.OnndateChanging(value);
					this.SendPropertyChanging();
					this._ndate = value;
					this.SendPropertyChanged("ndate");
					this.OnndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_f_info", Storage="_user", ThisKey="t_uid", OtherKey="id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.f_info.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.f_info.Add(this);
						this._t_uid = value.id;
					}
					else
					{
						this._t_uid = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
